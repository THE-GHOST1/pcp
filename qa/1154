#!/bin/sh
# PCP QA Test No. 1154
# Exercise the BCC PMDA zfsdist module - install, remove and values.
#
# Copyright (c) 2018 Andreas Gerstmayr.
#

seq=`basename $0`
echo "QA output created by $seq"

. ./common.bcc

_pmdabcc_check

write_size=`expr 20 \* 1024 \* 1024` # number of bytes to write into testfile
out_file="$PCP_TMPFILE_DIR/pcp-qa-$seq"

touch ${out_file}
tmpfile_fs=`df -T ${out_file} | tail -1 | awk '{print $2}'`
[ $tmpfile_fs = zfs ] || _notrun "this test needs a zfs filesystem at ${out_file}"

status=1       # failure is the default!
signal=$PCP_BINADM_DIR/pmsignal
$sudo rm -rf $tmp.* $seq.full

_value_filter()
{
    awk '/value [1-9]\d*/ {print "OK"; exit}'
}

_prepare_pmda bcc
trap "_pmdabcc_cleanup; exit \$status" 0 1 2 3 15
_stop_auto_restart pmcd

cat <<EOF | _pmdabcc_install
[pmda]
modules = zfsdist
prefix = bcc.
[zfsdist]
module = fs.zfsdist
cluster = 7
EOF

_pmdabcc_wait_for_metric

# Generate system activity for the BCC zfsdist module
dd if=/dev/zero of=${out_file} bs=${write_size} count=1 conv=fsync 2>/dev/null
sync && echo 3 | $sudo tee /proc/sys/vm/drop_caches > /dev/null
dd if=${out_file} of=/dev/null bs=${write_size} count=1 2>/dev/null

echo "=== report metric values for open ==="
pminfo -dfmtT bcc.fs.zfs.latency.open 2>&1 | tee -a $here/$seq.full \
| _value_filter

echo "=== report metric values for read ==="
pminfo -dfmtT bcc.fs.zfs.latency.read 2>&1 | tee -a $here/$seq.full \
| _value_filter

echo "=== report metric values for write ==="
pminfo -dfmtT bcc.fs.zfs.latency.write 2>&1 | tee -a $here/$seq.full \
| _value_filter

echo "=== report metric values for fsync ==="
pminfo -dfmtT bcc.fs.zfs.latency.fsync 2>&1 | tee -a $here/$seq.full \
| _value_filter

_pmdabcc_remove

status=0
exit
